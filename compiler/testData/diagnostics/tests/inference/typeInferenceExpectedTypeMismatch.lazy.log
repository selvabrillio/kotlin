DescriptorResolver@52 {
    <name not found> = JetTypeImpl@53
}

LazyJavaClassDescriptor@93['AbstractCollection'] {
    _typeConstructor = LazyJavaClassTypeConstructor@94['AbstractCollection']
}

LazyJavaClassDescriptor@107['AbstractList'] {
    _typeConstructor = LazyJavaClassTypeConstructor@108['AbstractList']
}

LazyJavaClassDescriptor@32['ArrayList'] {
    _constructors = ArrayList@232[3] { JavaConstructorDescriptor@233['<init>'], JavaConstructorDescriptor@234['<init>'], JavaConstructorDescriptor@235['<init>'] } // through LazyJavaClassMemberScope@236
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@95['ArrayList']
    defaultType = JetTypeImpl@231
}

LazyJavaClassDescriptor@22['Exception'] {
    _constructors = ArrayList@24[5] { JavaConstructorDescriptor@25['<init>'], JavaConstructorDescriptor@26['<init>'], JavaConstructorDescriptor@27['<init>'], JavaConstructorDescriptor@28['<init>'], ... } // through LazyJavaClassMemberScope@29
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@10['Exception']
    defaultType = JetTypeImpl@23
}

LazyJavaClassDescriptor@191['RandomAccess'] {
    _typeConstructor = LazyJavaClassTypeConstructor@56['RandomAccess']
}

LazyJavaClassDescriptor@85['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@7['Serializable']
}

LazyJavaClassTypeConstructor@94['AbstractCollection'] {
    _supertypes = ArrayList@104[1] { LazyJavaClassifierType@76['Collection<E>'] }
}

LazyJavaClassTypeConstructor@108['AbstractList'] {
    _supertypes = ArrayList@213[2] { LazyJavaClassifierType@105['AbstractCollection<E>'], LazyJavaClassifierType@203['List<E>'] }
}

LazyJavaClassTypeConstructor@95['ArrayList'] {
    _parameters = ArrayList@96[1] { LazyJavaTypeParameterDescriptor@2['E'] }
    _supertypes = ArrayList@97[5] { LazyJavaClassifierType@98['AbstractList<E>'], LazyJavaClassifierType@73['List<E>'], LazyJavaClassifierType@54['RandomAccess'], LazyJavaClassifierType@66['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@10['Exception'] {
    _parameters = ArrayList@11[empty]
    _supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Throwable'] }
}

LazyJavaClassTypeConstructor@56['RandomAccess'] {
    _supertypes = ArrayList@72[1] { JetTypeImpl@9 }
}

LazyJavaClassTypeConstructor@7['Serializable'] {
    _supertypes = ArrayList@8[1] { JetTypeImpl@9 }
}

LazyJavaClassifierType@105['AbstractCollection<E>'] {
    _typeConstructor = LazyJavaClassTypeConstructor@94['AbstractCollection']
    classifier = JavaClassImpl@106['AbstractCollection']
}

LazyJavaClassifierType@98['AbstractList<E>'] {
    _typeConstructor = LazyJavaClassTypeConstructor@108['AbstractList']
    classifier = JavaClassImpl@112['AbstractList']
}

LazyJavaClassifierType@66['Cloneable'] {
    _typeConstructor = DeserializedClassTypeConstructor@68
    classifier = JavaClassImpl@67['Cloneable']
}

LazyJavaClassifierType@79['Collection<? extends E>'] {
    _arguments = ArrayList@82[1] { TypeProjectionImpl@83 }
    _memberScope = SubstitutingScope@84
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@81
    classifier = JavaClassImpl@80['Collection']
}

LazyJavaClassifierType@239['Collection<? extends E>'] {
    _arguments = ArrayList@240[1] { TypeProjectionImpl@241 }
    _memberScope = SubstitutingScope@242
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@78
    classifier = JavaClassImpl@80['Collection']
}

LazyJavaClassifierType@76['Collection<E>'] {
    _typeConstructor = DeserializedClassTypeConstructor@78
    classifier = JavaClassImpl@77['Collection']
}

LazyJavaClassifierType@205['E'] {
    _arguments = ArrayList@207[empty]
    _nullable = Boolean@89
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@206['E']
}

LazyJavaClassifierType@210['E'] {
    _arguments = ArrayList@212[empty]
    _nullable = Boolean@15
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@211['E']
}

LazyJavaClassifierType@216['E'] {
    _arguments = ArrayList@217[empty]
    _nullable = Boolean@89
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@211['E']
}

LazyJavaClassifierType@229['E'] {
    _arguments = ArrayList@230[empty]
    _nullable = Boolean@15
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@206['E']
}

LazyJavaClassifierType@73['List<E>'] {
    _typeConstructor = DeserializedClassTypeConstructor@75
    classifier = JavaClassImpl@74['List']
}

LazyJavaClassifierType@203['List<E>'] {
    _typeConstructor = DeserializedClassTypeConstructor@75
    classifier = JavaClassImpl@204['List']
}

LazyJavaClassifierType@69['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@71
    classifier = JavaClassImpl@70['Object']
}

LazyJavaClassifierType@86['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@71
    classifier = JavaClassImpl@87['Object']
}

LazyJavaClassifierType@102['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@71
    classifier = JavaClassImpl@103['Object']
}

LazyJavaClassifierType@54['RandomAccess'] {
    _typeConstructor = LazyJavaClassTypeConstructor@56['RandomAccess']
    classifier = JavaClassImpl@55['RandomAccess']
}

LazyJavaClassifierType@228['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@7['Serializable']
    classifier = JavaClassImpl@194['Serializable']
}

LazyJavaClassifierType@14['String'] {
    _arguments = ArrayList@18[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@16['String']
}

LazyJavaClassifierType@19['String'] {
    _arguments = ArrayList@21[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@109['String'] {
    _arguments = ArrayList@111[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@110['String']
}

LazyJavaClassifierType@196['String'] {
    _arguments = ArrayList@197[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@16['String']
}

LazyJavaClassifierType@198['String'] {
    _arguments = ArrayList@199[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@243['String'] {
    _arguments = ArrayList@244[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@17
    classifier = JavaClassImpl@110['String']
}

LazyJavaClassifierType@88['Throwable'] {
    _arguments = ArrayList@92[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@90['Throwable']
}

LazyJavaClassifierType@99['Throwable'] {
    _arguments = ArrayList@101[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@100['Throwable']
}

LazyJavaClassifierType@200['Throwable'] {
    _arguments = ArrayList@202[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@201['Throwable']
}

LazyJavaClassifierType@208['Throwable'] {
    _arguments = ArrayList@209[empty]
    _nullable = Boolean@89
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@201['Throwable']
}

LazyJavaClassifierType@214['Throwable'] {
    _arguments = ArrayList@215[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@90['Throwable']
}

LazyJavaClassifierType@218['Throwable'] {
    _arguments = ArrayList@219[empty]
    _nullable = Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@100['Throwable']
}

LazyJavaClassifierType@13['Throwable'] {
    _arguments = ArrayList@238[empty]
    _typeConstructor = DeserializedClassTypeConstructor@91
    classifier = JavaClassImpl@237['Throwable']
}

LazyJavaPackageFragmentProvider@113 {
    _packageFragments('<root>': FqName@114) = LazyJavaPackageFragment@115['<root>']
    _packageFragments('A': FqName@125) = null
    _packageFragments('Any': FqName@176) = null
    _packageFragments('ArrayList': FqName@130) = null
    _packageFragments('B': FqName@166) = null
    _packageFragments('C': FqName@171) = null
    _packageFragments('In': FqName@151) = null
    _packageFragments('Int': FqName@187) = null
    _packageFragments('Out': FqName@141) = null
    _packageFragments('R': FqName@156) = null
    _packageFragments('S': FqName@136) = null
    _packageFragments('Set': FqName@181) = null
    _packageFragments('T': FqName@146) = null
    _packageFragments('Two': FqName@161) = null
    _packageFragments('java': FqName@117) = LazyJavaPackageFragment@118['java']
    _packageFragments('java.io': FqName@192) = LazyJavaPackageFragment@193['io']
    _packageFragments('java.lang': FqName@119) = LazyJavaPackageFragment@57['lang']
    _packageFragments('java.lang.A': FqName@128) = null
    _packageFragments('java.lang.Any': FqName@179) = null
    _packageFragments('java.lang.ArrayList': FqName@133) = null
    _packageFragments('java.lang.B': FqName@169) = null
    _packageFragments('java.lang.C': FqName@174) = null
    _packageFragments('java.lang.In': FqName@154) = null
    _packageFragments('java.lang.Int': FqName@190) = null
    _packageFragments('java.lang.Out': FqName@144) = null
    _packageFragments('java.lang.R': FqName@159) = null
    _packageFragments('java.lang.S': FqName@139) = null
    _packageFragments('java.lang.Set': FqName@184) = null
    _packageFragments('java.lang.T': FqName@149) = null
    _packageFragments('java.lang.Two': FqName@164) = null
    _packageFragments('java.util': FqName@123) = LazyJavaPackageFragment@30['util']
    _packageFragments('java.util.A': FqName@126) = null
    _packageFragments('java.util.Any': FqName@177) = null
    _packageFragments('java.util.ArrayList': FqName@131) = null
    _packageFragments('java.util.B': FqName@167) = null
    _packageFragments('java.util.C': FqName@172) = null
    _packageFragments('java.util.In': FqName@152) = null
    _packageFragments('java.util.Int': FqName@188) = null
    _packageFragments('java.util.Out': FqName@142) = null
    _packageFragments('java.util.R': FqName@157) = null
    _packageFragments('java.util.S': FqName@137) = null
    _packageFragments('java.util.Set': FqName@182) = null
    _packageFragments('java.util.T': FqName@147) = null
    _packageFragments('java.util.Two': FqName@162) = null
    _packageFragments('kotlin': FqName@120) = null
    _packageFragments('kotlin.A': FqName@127) = null
    _packageFragments('kotlin.Any': FqName@178) = null
    _packageFragments('kotlin.ArrayList': FqName@132) = null
    _packageFragments('kotlin.B': FqName@168) = null
    _packageFragments('kotlin.C': FqName@173) = null
    _packageFragments('kotlin.In': FqName@153) = null
    _packageFragments('kotlin.Int': FqName@189) = null
    _packageFragments('kotlin.Out': FqName@143) = null
    _packageFragments('kotlin.R': FqName@158) = null
    _packageFragments('kotlin.S': FqName@138) = null
    _packageFragments('kotlin.Set': FqName@183) = null
    _packageFragments('kotlin.T': FqName@148) = null
    _packageFragments('kotlin.Two': FqName@163) = null
    _packageFragments('kotlin.io': FqName@122) = null
    _packageFragments('kotlin.jvm': FqName@121) = null
    _packageFragments('typeInferenceExpectedTypeMismatch': FqName@116) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.A': FqName@124) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.Any': FqName@175) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.ArrayList': FqName@129) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.B': FqName@165) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.C': FqName@170) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.In': FqName@150) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.Int': FqName@186) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.Out': FqName@140) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.R': FqName@155) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.S': FqName@135) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.Set': FqName@180) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.T': FqName@145) = null
    _packageFragments('typeInferenceExpectedTypeMismatch.Two': FqName@160) = null
    topLevelClasses(JavaClassImpl@106['AbstractCollection']) = LazyJavaClassDescriptor@93['AbstractCollection']
    topLevelClasses(JavaClassImpl@112['AbstractList']) = LazyJavaClassDescriptor@107['AbstractList']
    topLevelClasses(JavaClassImpl@134['ArrayList']) = LazyJavaClassDescriptor@32['ArrayList']
    topLevelClasses(JavaClassImpl@195['Exception']) = LazyJavaClassDescriptor@22['Exception']
    topLevelClasses(JavaClassImpl@55['RandomAccess']) = LazyJavaClassDescriptor@191['RandomAccess']
    topLevelClasses(JavaClassImpl@194['Serializable']) = LazyJavaClassDescriptor@85['Serializable']
    topLevelClasses(JavaClassImpl@185['Set']) = LazyJavaClassDescriptor@36['Set']
}

LazyJavaPackageFragment@118['java'] {
    _functions('lang': Name@224) = LinkedHashSet@225[empty] // through LazyPackageFragmentScopeForJavaPackage@221
    _functions('util': Name@226) = LinkedHashSet@227[empty] // through LazyPackageFragmentScopeForJavaPackage@221
    classes('lang': Name@220) = null // through LazyPackageFragmentScopeForJavaPackage@221
    classes('util': Name@222) = null // through LazyPackageFragmentScopeForJavaPackage@221
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@38 // through LazyPackageFragmentScopeForJavaPackage@221
    memberIndex = computeMemberIndex$1@223 // through LazyPackageFragmentScopeForJavaPackage@221
}

LazyJavaPackageFragment@57['lang'] {
    _functions('ArrayList': Name@44) = LinkedHashSet@62[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('Exception': Name@46) = LinkedHashSet@63[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('bar': Name@50) = LinkedHashSet@65[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('foo': Name@48) = LinkedHashSet@64[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('newList': Name@40) = LinkedHashSet@60[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('use': Name@42) = LinkedHashSet@61[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    classes('ArrayList': Name@44) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('Exception': Name@46) = LazyJavaClassDescriptor@22['Exception'] // through LazyPackageFragmentScopeForJavaPackage@58
    classes('bar': Name@50) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('foo': Name@48) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('newList': Name@40) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('use': Name@42) = null // through LazyPackageFragmentScopeForJavaPackage@58
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@38 // through LazyPackageFragmentScopeForJavaPackage@58
    memberIndex = computeMemberIndex$1@59 // through LazyPackageFragmentScopeForJavaPackage@58
}

LazyJavaPackageFragment@30['util'] {
    _functions('ArrayList': Name@44) = LinkedHashSet@45[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    _functions('Exception': Name@46) = LinkedHashSet@47[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    _functions('bar': Name@50) = LinkedHashSet@51[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    _functions('foo': Name@48) = LinkedHashSet@49[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    _functions('newList': Name@40) = LinkedHashSet@41[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    _functions('use': Name@42) = LinkedHashSet@43[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    classes('Any': Name@34) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('ArrayList': Name@31) = LazyJavaClassDescriptor@32['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@33
    classes('Exception': Name@46) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('Int': Name@37) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('Set': Name@35) = LazyJavaClassDescriptor@36['Set'] // through LazyPackageFragmentScopeForJavaPackage@33
    classes('bar': Name@50) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('foo': Name@48) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('newList': Name@40) = null // through LazyPackageFragmentScopeForJavaPackage@33
    classes('use': Name@42) = null // through LazyPackageFragmentScopeForJavaPackage@33
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@38 // through LazyPackageFragmentScopeForJavaPackage@33
    memberIndex = computeMemberIndex$1@39 // through LazyPackageFragmentScopeForJavaPackage@33
}

LazyJavaTypeParameterDescriptor@2['E'] {
    defaultType = JetTypeImpl@6
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    upperBounds = LinkedHashSet@4[1] { NullableType@5 }
}

LazyJavaTypeParameterResolver@0 {
    resolve(JavaTypeParameterImpl@1['E']) = LazyJavaTypeParameterDescriptor@2['E']
}
