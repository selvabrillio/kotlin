LazyAnnotationDescriptor@189 {
    _resolutionResults = OverloadResolutionResultsImpl@191
    _type = JetTypeImpl@190
    _valueArguments(ValueParameterDescriptorImpl@192['strategy']) = null
}

LazyJavaClassDescriptor@127['AbstractMap'] {
    _functions('getOrElse1': Name@15) = LinkedHashSet@214[empty] // through LazyJavaClassMemberScope@213
    _properties('getOrElse1': Name@15) = ArrayList@215[empty] // through LazyJavaClassMemberScope@213
    _typeConstructor = LazyJavaClassTypeConstructor@23['AbstractMap']
    memberIndex = computeMemberIndex$1@212 // through LazyJavaClassMemberScope@213
}

LazyJavaClassDescriptor@90['HashMap'] {
    _constructors = ArrayList@149[4] { JavaConstructorDescriptor@150['<init>'], JavaConstructorDescriptor@151['<init>'], JavaConstructorDescriptor@152['<init>'], JavaConstructorDescriptor@153['<init>'] } // through LazyJavaClassMemberScope@154
    _functionTypeForSamInterface = null
    _functions('getOrElse1': Name@15) = LinkedHashSet@156[empty] // through LazyJavaClassMemberScope@154
    _properties('getOrElse1': Name@15) = ArrayList@159[empty] // through LazyJavaClassMemberScope@154
    _typeConstructor = LazyJavaClassTypeConstructor@45['HashMap']
    defaultType = JetTypeImpl@148
    enumEntryIndex = LinkedHashMap@158 // through LazyJavaClassMemberScope@154
    memberIndex = computeMemberIndex$1@155 // through LazyJavaClassMemberScope@154
    nestedClassIndex = LinkedHashMap@157 // through LazyJavaClassMemberScope@154
    nestedClasses('getOrElse1': Name@15) = null // through LazyJavaClassMemberScope@154
}

LazyJavaClassDescriptor@11['Serializable'] {
    _functions('getOrElse1': Name@15) = LinkedHashSet@16[empty] // through LazyJavaClassMemberScope@14
    _properties('getOrElse1': Name@15) = ArrayList@17[empty] // through LazyJavaClassMemberScope@14
    _typeConstructor = LazyJavaClassTypeConstructor@12['Serializable']
    memberIndex = computeMemberIndex$1@13 // through LazyJavaClassMemberScope@14
}

LazyJavaClassTypeConstructor@23['AbstractMap'] {
    _parameters = ArrayList@225[2] { LazyJavaTypeParameterDescriptor@160['K'], LazyJavaTypeParameterDescriptor@5['V'] }
    _supertypes = ArrayList@224[1] { LazyJavaClassifierType@36['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@45['HashMap'] {
    _parameters = ArrayList@46[2] { LazyJavaTypeParameterDescriptor@47['K'], LazyJavaTypeParameterDescriptor@48['V'] }
    _supertypes = ArrayList@49[4] { LazyJavaClassifierType@21['AbstractMap<K, V>'], LazyJavaClassifierType@50['Map<K, V>'], LazyJavaClassifierType@51['Cloneable'], LazyJavaClassifierType@52['Serializable'] }
}

LazyJavaClassTypeConstructor@12['Serializable'] {
    _parameters = ArrayList@209[empty]
    _supertypes = ArrayList@207[1] { JetTypeImpl@208 }
}

LazyJavaClassifierType@21['AbstractMap<K, V>'] {
    _arguments = ArrayList@24[2] { TypeProjectionImpl@25, TypeProjectionImpl@26 }
    _memberScope = SubstitutingScope@27
    _typeConstructor = LazyJavaClassTypeConstructor@23['AbstractMap']
    classifier = JavaClassImpl@22['AbstractMap']
}

LazyJavaClassifierType@51['Cloneable'] {
    _arguments = ArrayList@133[empty]
    _memberScope = DeserializedClassMemberScope@134
    _typeConstructor = DeserializedClassTypeConstructor@132
    classifier = JavaClassImpl@131['Cloneable']
}

LazyJavaClassifierType@7['K'] {
    _arguments = ArrayList@10[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@8['K']
}

LazyJavaClassifierType@28['K'] {
    _arguments = ArrayList@32[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@31
    classifier = JavaTypeParameterImpl@30['K']
}

LazyJavaClassifierType@33['K'] {
    _arguments = ArrayList@35[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@34['K']
}

LazyJavaClassifierType@73['K'] {
    _arguments = ArrayList@75[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@74['K']
}

LazyJavaClassifierType@135['K'] {
    _arguments = ArrayList@137[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@136['K']
}

LazyJavaClassifierType@161['K'] {
    _arguments = ArrayList@162[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@31
    classifier = JavaTypeParameterImpl@30['K']
}

LazyJavaClassifierType@205['K'] {
    _arguments = ArrayList@206[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@8['K']
}

LazyJavaClassifierType@210['K'] {
    _arguments = ArrayList@211[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@136['K']
}

LazyJavaClassifierType@222['K'] {
    _arguments = ArrayList@223[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@74['K']
}

LazyJavaClassifierType@228['K'] {
    _arguments = ArrayList@229[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    classifier = JavaTypeParameterImpl@34['K']
}

LazyJavaClassifierType@181['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@183[2] { TypeProjectionImpl@184, TypeProjectionImpl@185 }
    _memberScope = SubstitutingScope@186
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@38
    classifier = JavaClassImpl@182['Map']
}

LazyJavaClassifierType@230['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@232[2] { TypeProjectionImpl@233, TypeProjectionImpl@234 }
    _memberScope = SubstitutingScope@235
    _nullable = Boolean@29
    _typeConstructor = DeserializedClassTypeConstructor@231
    classifier = JavaClassImpl@182['Map']
}

LazyJavaClassifierType@36['Map<K, V>'] {
    _arguments = ArrayList@39[2] { TypeProjectionImpl@40, TypeProjectionImpl@41 }
    _memberScope = SubstitutingScope@42
    _typeConstructor = DeserializedClassTypeConstructor@38
    classifier = JavaClassImpl@37['Map']
}

LazyJavaClassifierType@50['Map<K, V>'] {
    _arguments = ArrayList@69[2] { TypeProjectionImpl@70, TypeProjectionImpl@71 }
    _memberScope = SubstitutingScope@72
    _typeConstructor = DeserializedClassTypeConstructor@38
    classifier = JavaClassImpl@68['Map']
}

LazyJavaClassifierType@138['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@140
    classifier = JavaClassImpl@139['Object']
}

LazyJavaClassifierType@203['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@140
    classifier = JavaClassImpl@204['Object']
}

LazyJavaClassifierType@52['Serializable'] {
    _arguments = ArrayList@141[empty]
    _memberScope = LazyJavaClassMemberScope@14
    _typeConstructor = LazyJavaClassTypeConstructor@12['Serializable']
    classifier = JavaClassImpl@130['Serializable']
}

LazyJavaClassifierType@0['V'] {
    _arguments = ArrayList@4[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@2['V']
}

LazyJavaClassifierType@18['V'] {
    _arguments = ArrayList@20[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@19['V']
}

LazyJavaClassifierType@43['V'] {
    _arguments = ArrayList@44[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@19['V']
}

LazyJavaClassifierType@53['V'] {
    _arguments = ArrayList@55[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@54['V']
}

LazyJavaClassifierType@66['V'] {
    _arguments = ArrayList@67[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@54['V']
}

LazyJavaClassifierType@145['V'] {
    _arguments = ArrayList@147[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@146['V']
}

LazyJavaClassifierType@187['V'] {
    _arguments = ArrayList@188[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@2['V']
}

LazyJavaClassifierType@198['V'] {
    _arguments = ArrayList@199[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    classifier = JavaTypeParameterImpl@146['V']
}

LazyJavaClassifierType@219['V'] {
    _arguments = ArrayList@221[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@6
    classifier = JavaTypeParameterImpl@220['V']
}

LazyJavaClassifierType@226['V'] {
    _arguments = ArrayList@227[empty]
    _nullable = Boolean@29
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@6
    classifier = JavaTypeParameterImpl@220['V']
}

LazyJavaPackageFragmentProvider@76 {
    _packageFragments('<root>': FqName@77) = LazyJavaPackageFragment@78['<root>']
    _packageFragments('Any': FqName@120) = null
    _packageFragments('Array': FqName@112) = null
    _packageFragments('Int': FqName@124) = null
    _packageFragments('K': FqName@100) = null
    _packageFragments('Map': FqName@96) = null
    _packageFragments('String': FqName@116) = null
    _packageFragments('V': FqName@104) = null
    _packageFragments('V1': FqName@92) = null
    _packageFragments('d': FqName@79) = null
    _packageFragments('d.Any': FqName@119) = null
    _packageFragments('d.Array': FqName@111) = null
    _packageFragments('d.Int': FqName@123) = null
    _packageFragments('d.K': FqName@99) = null
    _packageFragments('d.Map': FqName@95) = null
    _packageFragments('d.String': FqName@115) = null
    _packageFragments('d.V': FqName@103) = null
    _packageFragments('d.V1': FqName@91) = null
    _packageFragments('d.inline': FqName@107) = null
    _packageFragments('inline': FqName@108) = null
    _packageFragments('java': FqName@80) = LazyJavaPackageFragment@56['java']
    _packageFragments('java.io': FqName@128) = LazyJavaPackageFragment@129['io']
    _packageFragments('java.lang': FqName@81) = LazyJavaPackageFragment@82['lang']
    _packageFragments('java.lang.Any': FqName@122) = null
    _packageFragments('java.lang.Array': FqName@114) = null
    _packageFragments('java.lang.Int': FqName@126) = null
    _packageFragments('java.lang.K': FqName@102) = null
    _packageFragments('java.lang.Map': FqName@98) = null
    _packageFragments('java.lang.String': FqName@118) = null
    _packageFragments('java.lang.V': FqName@106) = null
    _packageFragments('java.lang.V1': FqName@94) = null
    _packageFragments('java.lang.inline': FqName@110) = null
    _packageFragments('java.util': FqName@86) = LazyJavaPackageFragment@87['util']
    _packageFragments('java.util.HashMap': FqName@88) = null
    _packageFragments('kotlin': FqName@83) = null
    _packageFragments('kotlin.Any': FqName@121) = null
    _packageFragments('kotlin.Array': FqName@113) = null
    _packageFragments('kotlin.Int': FqName@125) = null
    _packageFragments('kotlin.K': FqName@101) = null
    _packageFragments('kotlin.Map': FqName@97) = null
    _packageFragments('kotlin.String': FqName@117) = null
    _packageFragments('kotlin.V': FqName@105) = null
    _packageFragments('kotlin.V1': FqName@93) = null
    _packageFragments('kotlin.inline': FqName@109) = null
    _packageFragments('kotlin.io': FqName@85) = null
    _packageFragments('kotlin.jvm': FqName@84) = null
    topLevelClasses(JavaClassImpl@22['AbstractMap']) = LazyJavaClassDescriptor@127['AbstractMap']
    topLevelClasses(JavaClassImpl@89['HashMap']) = LazyJavaClassDescriptor@90['HashMap']
    topLevelClasses(JavaClassImpl@130['Serializable']) = LazyJavaClassDescriptor@11['Serializable']
}

LazyJavaPackageFragment@56['java'] {
    _functions('lang': Name@62) = LinkedHashSet@63[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    _functions('util': Name@64) = LinkedHashSet@65[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    classes('lang': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('util': Name@59) = null // through LazyPackageFragmentScopeForJavaPackage@58
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@60 // through LazyPackageFragmentScopeForJavaPackage@58
    memberIndex = computeMemberIndex$1@61 // through LazyPackageFragmentScopeForJavaPackage@58
}

LazyJavaPackageFragment@82['lang'] {
    _functions('HashMap': Name@176) = LinkedHashSet@177[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('containsKey': Name@168) = LinkedHashSet@169[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('defaultValue': Name@172) = LinkedHashSet@173[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('get': Name@170) = LinkedHashSet@171[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('getOrElse1': Name@15) = LinkedHashSet@180[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('invoke': Name@174) = LinkedHashSet@175[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    _functions('println': Name@178) = LinkedHashSet@179[empty] // through LazyPackageFragmentScopeForJavaPackage@166
    classes('HashMap': Name@176) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('containsKey': Name@168) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('defaultValue': Name@172) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('get': Name@170) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('getOrElse1': Name@15) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('invoke': Name@174) = null // through LazyPackageFragmentScopeForJavaPackage@166
    classes('println': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@166
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@60 // through LazyPackageFragmentScopeForJavaPackage@166
    memberIndex = computeMemberIndex$1@167 // through LazyPackageFragmentScopeForJavaPackage@166
}

LazyJavaPackageFragment@87['util'] {
    _functions('HashMap': Name@196) = LinkedHashSet@197[empty] // through LazyPackageFragmentScopeForJavaPackage@194
    classes('HashMap': Name@193) = LazyJavaClassDescriptor@90['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@194
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@60 // through LazyPackageFragmentScopeForJavaPackage@194
    memberIndex = computeMemberIndex$1@195 // through LazyPackageFragmentScopeForJavaPackage@194
}

LazyJavaTypeParameterDescriptor@47['K'] {
    defaultType = JetTypeImpl@200
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@9
    upperBounds = LinkedHashSet@201[1] { NullableType@202 }
}

LazyJavaTypeParameterDescriptor@160['K'] {
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@31
}

LazyJavaTypeParameterDescriptor@48['V'] {
    defaultType = JetTypeImpl@216
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@3
    upperBounds = LinkedHashSet@217[1] { NullableType@218 }
}

LazyJavaTypeParameterDescriptor@5['V'] {
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@6
}

LazyJavaTypeParameterResolver@142 {
    resolve(JavaTypeParameterImpl@143['K']) = LazyJavaTypeParameterDescriptor@47['K']
    resolve(JavaTypeParameterImpl@144['V']) = LazyJavaTypeParameterDescriptor@48['V']
}

LazyJavaTypeParameterResolver@163 {
    resolve(JavaTypeParameterImpl@164['K']) = LazyJavaTypeParameterDescriptor@160['K']
    resolve(JavaTypeParameterImpl@165['V']) = LazyJavaTypeParameterDescriptor@5['V']
}
