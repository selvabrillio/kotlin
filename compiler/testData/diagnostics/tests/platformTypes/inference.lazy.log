LazyJavaClassDescriptor@83['Base'] {
    _typeConstructor = LazyJavaClassTypeConstructor@25['Base']
}

LazyJavaClassDescriptor@54['Exception'] {
    _constructors = ArrayList@57[5] { JavaConstructorDescriptor@58['<init>'], JavaConstructorDescriptor@59['<init>'], JavaConstructorDescriptor@60['<init>'], JavaConstructorDescriptor@61['<init>'], ... } // through LazyJavaClassMemberScope@62
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@55['Exception']
    defaultType = JetTypeImpl@56
}

LazyJavaClassDescriptor@93['HS'] {
    _constructors = ArrayList@155[1] { JavaConstructorDescriptor@156['<init>'] } // through LazyJavaClassMemberScope@157
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@141['HS']
    defaultType = JetTypeImpl@154
}

LazyJavaClassDescriptor@51['HashSet'] {
    _functionTypeForSamInterface = null
}

LazyJavaClassTypeConstructor@25['Base'] {
    _parameters = ArrayList@84[1] { LazyJavaTypeParameterDescriptor@52['T'] }
    _supertypes = ArrayList@85[1] { JetTypeImpl@86 }
}

LazyJavaClassTypeConstructor@55['Exception'] {
    _parameters = ArrayList@150[empty]
    _supertypes = ArrayList@151[1] { LazyJavaClassifierType@20['Throwable'] }
}

LazyJavaClassTypeConstructor@141['HS'] {
    _parameters = ArrayList@142[1] { LazyJavaTypeParameterDescriptor@135['T'] }
    _supertypes = ArrayList@143[1] { LazyJavaClassifierType@23['Base<T>'] }
}

LazyJavaClassifierType@23['Base<T>'] {
    _arguments = ArrayList@26[1] { TypeProjectionImpl@27 }
    _memberScope = SubstitutingScope@28
    _nullable = Boolean@6
    _typeConstructor = LazyJavaClassTypeConstructor@25['Base']
    classifier = JavaClassImpl@24['Base']
}

LazyJavaClassifierType@138['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@140
    classifier = JavaClassImpl@139['Object']
}

LazyJavaClassifierType@0['String'] {
    _arguments = ArrayList@4[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@2['String']
}

LazyJavaClassifierType@29['String'] {
    _arguments = ArrayList@31[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@30['String']
}

LazyJavaClassifierType@78['String'] {
    _arguments = ArrayList@79[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@2['String']
}

LazyJavaClassifierType@144['String'] {
    _arguments = ArrayList@146[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@145['String']
}

LazyJavaClassifierType@163['String'] {
    _arguments = ArrayList@164[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@30['String']
}

LazyJavaClassifierType@165['String'] {
    _arguments = ArrayList@166[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@3
    classifier = JavaClassImpl@145['String']
}

LazyJavaClassifierType@72['T'] {
    _arguments = ArrayList@75[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@74
    classifier = JavaTypeParameterImpl@73['T']
}

LazyJavaClassifierType@89['T'] {
    _arguments = ArrayList@90[empty]
    _nullable = Boolean@6
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@74
    classifier = JavaTypeParameterImpl@73['T']
}

LazyJavaClassifierType@5['Throwable'] {
    _arguments = ArrayList@9[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@7['Throwable']
}

LazyJavaClassifierType@69['Throwable'] {
    _arguments = ArrayList@71[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@70['Throwable']
}

LazyJavaClassifierType@76['Throwable'] {
    _arguments = ArrayList@77[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@7['Throwable']
}

LazyJavaClassifierType@80['Throwable'] {
    _arguments = ArrayList@82[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@81['Throwable']
}

LazyJavaClassifierType@87['Throwable'] {
    _arguments = ArrayList@88[empty]
    _nullable = Boolean@1
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@70['Throwable']
}

LazyJavaClassifierType@136['Throwable'] {
    _arguments = ArrayList@137[empty]
    _nullable = Boolean@6
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@81['Throwable']
}

LazyJavaClassifierType@20['Throwable'] {
    _arguments = ArrayList@22[empty]
    _typeConstructor = DeserializedClassTypeConstructor@8
    classifier = JavaClassImpl@21['Throwable']
}

LazyJavaPackageFragmentProvider@98 {
    _packageFragments('<root>': FqName@99) = LazyJavaPackageFragment@32['<root>']
    _packageFragments('Base': FqName@110) = null
    _packageFragments('C': FqName@124) = null
    _packageFragments('HS': FqName@119) = null
    _packageFragments('Int': FqName@128) = null
    _packageFragments('T': FqName@115) = null
    _packageFragments('foo': FqName@106) = LazyJavaPackageFragment@91['foo']
    _packageFragments('foo.Base': FqName@111) = null
    _packageFragments('foo.C': FqName@125) = null
    _packageFragments('foo.HS': FqName@120) = null
    _packageFragments('foo.Int': FqName@129) = null
    _packageFragments('foo.T': FqName@116) = null
    _packageFragments('java': FqName@100) = LazyJavaPackageFragment@10['java']
    _packageFragments('java.lang': FqName@101) = LazyJavaPackageFragment@102['lang']
    _packageFragments('java.lang.Base': FqName@113) = null
    _packageFragments('java.lang.C': FqName@127) = null
    _packageFragments('java.lang.HS': FqName@122) = null
    _packageFragments('java.lang.Int': FqName@131) = null
    _packageFragments('java.lang.T': FqName@118) = null
    _packageFragments('java.util': FqName@107) = LazyJavaPackageFragment@63['util']
    _packageFragments('java.util.HashSet': FqName@108) = null
    _packageFragments('kotlin': FqName@103) = null
    _packageFragments('kotlin.Base': FqName@112) = null
    _packageFragments('kotlin.C': FqName@126) = null
    _packageFragments('kotlin.HS': FqName@121) = null
    _packageFragments('kotlin.Int': FqName@130) = null
    _packageFragments('kotlin.T': FqName@117) = null
    _packageFragments('kotlin.io': FqName@105) = null
    _packageFragments('kotlin.jvm': FqName@104) = null
    topLevelClasses(JavaClassImpl@114['Base']) = LazyJavaClassDescriptor@83['Base']
    topLevelClasses(JavaClassImpl@132['Exception']) = LazyJavaClassDescriptor@54['Exception']
    topLevelClasses(JavaClassImpl@123['HS']) = LazyJavaClassDescriptor@93['HS']
    topLevelClasses(JavaClassImpl@109['HashSet']) = LazyJavaClassDescriptor@51['HashSet']
}

LazyJavaPackageFragment@32['<root>'] {
    _functions('Exception': Name@45) = LinkedHashSet@46[empty] // through LazyPackageFragmentScopeForJavaPackage@34
    _functions('HS': Name@49) = LinkedHashSet@50[empty] // through LazyPackageFragmentScopeForJavaPackage@34
    _functions('convert': Name@47) = LinkedHashSet@48[empty] // through LazyPackageFragmentScopeForJavaPackage@34
    _functions('foo': Name@40) = LinkedHashSet@41[empty] // through LazyPackageFragmentScopeForJavaPackage@34
    _functions('java': Name@42) = LinkedHashSet@43[empty] // through LazyPackageFragmentScopeForJavaPackage@34
    classes('Base': Name@36) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('Exception': Name@45) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('HS': Name@37) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('HashSet': Name@44) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('Int': Name@38) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('convert': Name@47) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('foo': Name@33) = null // through LazyPackageFragmentScopeForJavaPackage@34
    classes('java': Name@35) = null // through LazyPackageFragmentScopeForJavaPackage@34
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@14 // through LazyPackageFragmentScopeForJavaPackage@34
    memberIndex = computeMemberIndex$1@39 // through LazyPackageFragmentScopeForJavaPackage@34
}

LazyJavaPackageFragment@91['foo'] {
    _functions('Exception': Name@45) = LinkedHashSet@95[empty] // through LazyPackageFragmentScopeForJavaPackage@92
    _functions('HS': Name@49) = LinkedHashSet@97[empty] // through LazyPackageFragmentScopeForJavaPackage@92
    _functions('convert': Name@47) = LinkedHashSet@96[empty] // through LazyPackageFragmentScopeForJavaPackage@92
    classes('Base': Name@36) = LazyJavaClassDescriptor@83['Base'] // through LazyPackageFragmentScopeForJavaPackage@92
    classes('Exception': Name@45) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('HS': Name@37) = LazyJavaClassDescriptor@93['HS'] // through LazyPackageFragmentScopeForJavaPackage@92
    classes('Int': Name@38) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('convert': Name@47) = null // through LazyPackageFragmentScopeForJavaPackage@92
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@14 // through LazyPackageFragmentScopeForJavaPackage@92
    memberIndex = computeMemberIndex$1@94 // through LazyPackageFragmentScopeForJavaPackage@92
}

LazyJavaPackageFragment@10['java'] {
    _functions('lang': Name@16) = LinkedHashSet@17[empty] // through LazyPackageFragmentScopeForJavaPackage@12
    _functions('util': Name@18) = LinkedHashSet@19[empty] // through LazyPackageFragmentScopeForJavaPackage@12
    classes('lang': Name@11) = null // through LazyPackageFragmentScopeForJavaPackage@12
    classes('util': Name@13) = null // through LazyPackageFragmentScopeForJavaPackage@12
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@14 // through LazyPackageFragmentScopeForJavaPackage@12
    memberIndex = computeMemberIndex$1@15 // through LazyPackageFragmentScopeForJavaPackage@12
}

LazyJavaPackageFragment@102['lang'] {
    _functions('Exception': Name@45) = LinkedHashSet@160[empty] // through LazyPackageFragmentScopeForJavaPackage@158
    _functions('HS': Name@49) = LinkedHashSet@162[empty] // through LazyPackageFragmentScopeForJavaPackage@158
    _functions('convert': Name@47) = LinkedHashSet@161[empty] // through LazyPackageFragmentScopeForJavaPackage@158
    classes('Exception': Name@45) = LazyJavaClassDescriptor@54['Exception'] // through LazyPackageFragmentScopeForJavaPackage@158
    classes('HS': Name@49) = null // through LazyPackageFragmentScopeForJavaPackage@158
    classes('convert': Name@47) = null // through LazyPackageFragmentScopeForJavaPackage@158
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@14 // through LazyPackageFragmentScopeForJavaPackage@158
    memberIndex = computeMemberIndex$1@159 // through LazyPackageFragmentScopeForJavaPackage@158
}

LazyJavaPackageFragment@63['util'] {
    _functions('HashSet': Name@67) = LinkedHashSet@68[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    classes('HashSet': Name@64) = LazyJavaClassDescriptor@51['HashSet'] // through LazyPackageFragmentScopeForJavaPackage@65
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@14 // through LazyPackageFragmentScopeForJavaPackage@65
    memberIndex = computeMemberIndex$1@66 // through LazyPackageFragmentScopeForJavaPackage@65
}

LazyJavaTypeParameterDescriptor@135['T'] {
    defaultType = JetTypeImpl@149
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@74
    upperBounds = LinkedHashSet@147[1] { NullableType@148 }
}

LazyJavaTypeParameterDescriptor@52['T'] {
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@53
}

LazyJavaTypeParameterResolver@133 {
    resolve(JavaTypeParameterImpl@134['T']) = LazyJavaTypeParameterDescriptor@135['T']
}

LazyJavaTypeParameterResolver@152 {
    resolve(JavaTypeParameterImpl@153['T']) = LazyJavaTypeParameterDescriptor@52['T']
}
