LazyJavaClassDescriptor@10['SAM'] {
    _functionTypeForSamInterface = JetTypeImpl@12
    _typeConstructor = LazyJavaClassTypeConstructor@5['SAM']
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@11['<this>']
}

LazyJavaClassDescriptor@37['Util'] {
    _functions('sam': Name@80) = LinkedHashSet@81[2] { JavaMethodDescriptor@82['sam'], SamAdapterFunctionDescriptor@83['sam'] } // through LazyJavaStaticClassScope@76
    _functions('sam': Name@80) = LinkedHashSet@85[empty] // through LazyJavaClassMemberScope@78
    _properties('sam': Name@80) = ArrayList@87[empty] // through LazyJavaClassMemberScope@78
    _properties('sam': Name@80) = ArrayList@86[empty] // through LazyJavaStaticClassScope@76
    _typeConstructor = LazyJavaClassTypeConstructor@73['Util']
    enumEntryIndex = LinkedHashMap@79 // through LazyJavaClassMemberScope@78
    memberIndex = computeMemberIndex$1@84 // through LazyJavaClassMemberScope@78
    memberIndex = computeMemberIndex$1@75 // through LazyJavaStaticClassScope@76
    nestedClassIndex = LinkedHashMap@77 // through LazyJavaClassMemberScope@78
    nestedClasses('sam': Name@80) = null // through LazyJavaClassMemberScope@78
}

LazyJavaClassDescriptor@65['Void'] {
    _typeConstructor = LazyJavaClassTypeConstructor@3['Void']
}

LazyJavaClassTypeConstructor@5['SAM'] {
    _parameters = ArrayList@6[1] { LazyJavaTypeParameterDescriptor@7['R'] }
    _supertypes = ArrayList@8[1] { JetTypeImpl@9 }
}

LazyJavaClassTypeConstructor@73['Util'] {
    _supertypes = ArrayList@74[1] { JetTypeImpl@9 }
}

LazyJavaClassTypeConstructor@3['Void'] {
    _parameters = ArrayList@47[empty]
}

LazyJavaClassifierType@30['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@32
    classifier = JavaClassImpl@31['Object']
}

LazyJavaClassifierType@45['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@32
    classifier = JavaClassImpl@46['Object']
}

LazyJavaClassifierType@19['R'] {
    _arguments = ArrayList@22[empty]
    _nullable = Boolean@1
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@21
    classifier = JavaTypeParameterImpl@20['R']
}

LazyJavaClassifierType@48['R'] {
    _arguments = ArrayList@49[empty]
    _nullable = Boolean@14
    _typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@21
    classifier = JavaTypeParameterImpl@20['R']
}

LazyJavaClassifierType@24['SAM<Void>'] {
    _arguments = ArrayList@26[1] { TypeProjectionImpl@27 }
    _nullable = Boolean@1
    _typeConstructor = LazyJavaClassTypeConstructor@5['SAM']
    classifier = JavaClassImpl@25['SAM']
}

LazyJavaClassifierType@38['SAM<Void>'] {
    _arguments = ArrayList@39[1] { TypeProjectionImpl@40 }
    _nullable = Boolean@14
    _typeConstructor = LazyJavaClassTypeConstructor@5['SAM']
    classifier = JavaClassImpl@25['SAM']
}

LazyJavaClassifierType@0['Void'] {
    _arguments = ArrayList@4[empty]
    _nullable = Boolean@1
    _typeConstructor = LazyJavaClassTypeConstructor@3['Void']
    classifier = JavaClassImpl@2['Void']
}

LazyJavaClassifierType@13['Void'] {
    _arguments = ArrayList@16[empty]
    _nullable = Boolean@14
    _typeConstructor = LazyJavaClassTypeConstructor@3['Void']
    classifier = JavaClassImpl@15['Void']
}

LazyJavaClassifierType@17['Void'] {
    _arguments = ArrayList@18[empty]
    _nullable = Boolean@1
    _typeConstructor = LazyJavaClassTypeConstructor@3['Void']
    classifier = JavaClassImpl@15['Void']
}

LazyJavaClassifierType@71['Void'] {
    _arguments = ArrayList@72[empty]
    _nullable = Boolean@14
    _typeConstructor = LazyJavaClassTypeConstructor@3['Void']
    classifier = JavaClassImpl@2['Void']
}

LazyJavaPackageFragmentProvider@50 {
    _packageFragments('<root>': FqName@51) = LazyJavaPackageFragment@52['<root>']
    _packageFragments('Util': FqName@61) = null
    _packageFragments('java': FqName@53) = LazyJavaPackageFragment@54['java']
    _packageFragments('java.lang': FqName@55) = LazyJavaPackageFragment@41['lang']
    _packageFragments('java.lang.Util': FqName@64) = null
    _packageFragments('kotlin': FqName@56) = null
    _packageFragments('kotlin.Util': FqName@63) = null
    _packageFragments('kotlin.io': FqName@58) = null
    _packageFragments('kotlin.jvm': FqName@57) = null
    _packageFragments('p': FqName@59) = LazyJavaPackageFragment@33['p']
    _packageFragments('p.Util': FqName@62) = null
    topLevelClasses(JavaClassImpl@25['SAM']) = LazyJavaClassDescriptor@10['SAM']
    topLevelClasses(JavaClassImpl@60['Util']) = LazyJavaClassDescriptor@37['Util']
    topLevelClasses(JavaClassImpl@2['Void']) = LazyJavaClassDescriptor@65['Void']
}

LazyJavaPackageFragment@52['<root>'] {
    _functions('p': Name@69) = LinkedHashSet@70[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    classes('Util': Name@36) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('p': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@67
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@34 // through LazyPackageFragmentScopeForJavaPackage@67
    memberIndex = computeMemberIndex$1@68 // through LazyPackageFragmentScopeForJavaPackage@67
}

LazyJavaPackageFragment@54['java'] {
    _functions('lang': Name@91) = LinkedHashSet@92[empty] // through LazyPackageFragmentScopeForJavaPackage@89
    classes('lang': Name@88) = null // through LazyPackageFragmentScopeForJavaPackage@89
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@34 // through LazyPackageFragmentScopeForJavaPackage@89
    memberIndex = computeMemberIndex$1@90 // through LazyPackageFragmentScopeForJavaPackage@89
}

LazyJavaPackageFragment@41['lang'] {
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@34 // through LazyPackageFragmentScopeForJavaPackage@42
}

LazyJavaPackageFragment@33['p'] {
    classes('Util': Name@36) = LazyJavaClassDescriptor@37['Util'] // through LazyPackageFragmentScopeForJavaPackage@35
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@34 // through LazyPackageFragmentScopeForJavaPackage@35
}

LazyJavaTypeParameterDescriptor@7['R'] {
    typeConstructor = org.jetbrains.jet.lang.descriptors.impl.AbstractLazyTypeParameterDescriptor$1@21
    upperBounds = LinkedHashSet@43[1] { NullableType@44 }
}

LazyJavaTypeParameterResolver@28 {
    resolve(JavaTypeParameterImpl@29['R']) = LazyJavaTypeParameterDescriptor@7['R']
}

LazyJavaTypeParameterResolver@23 {
    resolve(JavaTypeParameterImpl@20['R']) = null
}
