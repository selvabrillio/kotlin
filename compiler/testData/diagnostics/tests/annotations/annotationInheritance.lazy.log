DescriptorResolver@14 {
    <name not found> = JetTypeImpl@15
    <name not found> = null
}

LazyJavaPackageFragmentProvider@16 {
    _packageFragments('<root>': FqName@17) = LazyJavaPackageFragment@4['<root>']
    _packageFragments('Ann': FqName@30) = null
    _packageFragments('Ann2': FqName@31) = null
    _packageFragments('Ann3': FqName@32) = null
    _packageFragments('Ann4': FqName@33) = null
    _packageFragments('C': FqName@23) = null
    _packageFragments('T': FqName@26) = null
    _packageFragments('a': FqName@29) = null
    _packageFragments('java': FqName@18) = LazyJavaPackageFragment@6['java']
    _packageFragments('java.lang': FqName@19) = LazyJavaPackageFragment@0['lang']
    _packageFragments('java.lang.C': FqName@25) = null
    _packageFragments('java.lang.T': FqName@28) = null
    _packageFragments('kotlin': FqName@20) = null
    _packageFragments('kotlin.C': FqName@24) = null
    _packageFragments('kotlin.T': FqName@27) = null
    _packageFragments('kotlin.io': FqName@22) = null
    _packageFragments('kotlin.jvm': FqName@21) = null
}

LazyJavaPackageFragment@4['<root>'] {
    classes('a': Name@3) = null // through LazyPackageFragmentScopeForJavaPackage@5
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@1 // through LazyPackageFragmentScopeForJavaPackage@5
}

LazyJavaPackageFragment@6['java'] {
    _functions('lang': Name@10) = LinkedHashSet@11[empty] // through LazyPackageFragmentScopeForJavaPackage@8
    classes('lang': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@8
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@1 // through LazyPackageFragmentScopeForJavaPackage@8
    memberIndex = computeMemberIndex$1@9 // through LazyPackageFragmentScopeForJavaPackage@8
}

LazyJavaPackageFragment@0['lang'] {
    classes('a': Name@3) = null // through LazyPackageFragmentScopeForJavaPackage@2
    deserializedPackageScope = org.jetbrains.jet.lang.resolve.scopes.JetScope$1@1 // through LazyPackageFragmentScopeForJavaPackage@2
}

org.jetbrains.jet.lang.types.expressions.ClosureExpressionsTypingVisitor$1@12 {
    <name not found> = JetTypeImpl@13
}
